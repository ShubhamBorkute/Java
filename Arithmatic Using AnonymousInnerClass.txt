Convert IArithmetic application into Anonymous InnerClass as
implementation class model .
IArithmetic.java
package p2;
public interface IArithmetic {
public abstract double process(int x,int y);
}

DemoAnonymous5.java(MainClass)
package p1;
import java.util.Scanner;
import p2.*;
public class DemoAnonymous5 {
public static void main(String[] args) {
Scanner s = new Scanner(System.in);
System.out.println(&quot;Enter int value1:&quot;);
int v1 = s.nextInt();
System.out.println(&quot;Enter int value2:&quot;);
int v2 = s.nextInt();
System.out.println(&quot;====Choice====&quot;);
System.out.println(&quot;1.add\n2.sub\n3.mul\n4.div\n5.modDiv&quot;);
System.out.println(&quot;Enter the Choice:&quot;);
int choice = s.nextInt();
switch(choice)

{
case 1:
IArithmetic ad = new IArithmetic()
{
public double process(int x,int y)
{
return x+y;
}
};
double r1 = ad.process(v1,v2);
System.out.println(&quot;Sum:&quot;+r1);
break;
case 2:
IArithmetic sb = new IArithmetic()
{
public double process(int x,int y)
{
return x-y;
}
};
double r2 = sb.process(v1,v2);
System.out.println(&quot;Sub:&quot;+r2);
break;
case 3:

IArithmetic ml = new IArithmetic()
{
public double process(int x,int y)
{
return x*y;
}
};
double r3=ml.process(v1,v2);
System.out.println(&quot;Mul:&quot;+r3);
break;
case 4:
IArithmetic dv = new IArithmetic()
{
public double process(int x,int y)
{
return (double)x/y;
}
};
double r4=dv.process(v1,v2);
System.out.println(&quot;Div:&quot;+r4);
break;
case 5:
IArithmetic md = new IArithmetic()
{

public double process(int x,int y)
{
return x%y;
}
};
double r5=md.process(v1,v2);
System.out.println(&quot;ModDiv:&quot;+r5);
break;
default:
System.out.println(&quot;Invalid Choice...&quot;);
}//end of switch
s.close();
}
}
ClassFiles:
IArithmetic.class
DemoAnonymous5.class(MainClass)
DemoAnonymous5$1.class
DemoAnonymous5$2.class
DemoAnonymous5$3.class
DemoAnonymous5$4.class
DemoAnonymous5$5.class